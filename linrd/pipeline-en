GNU Taler via sandcastle-ng. Git
    On a Linux/Debian computer
        Launch a terminal
            Open the applications menu
            Search for the terminal application
            Click on the terminal application icon
        In the terminal
            Install podman and vim
                apt install podman vim
            Create a working directory
                cd ~
                mkdir GNU_TALER-DEMO
                cd GNU_TALER_DEMO
            Download the git repository of the sandcastle-ng project
                git clone https://git.taler.net/sandcastle-ng.git
            Enter the directory
                cd sandcastle-ng
            Check the components, i.e. the .tag files, to ensure that each file contains the version to build
                Find the correct git tag
                    TODO
                Ensure the tags are correctly registered in each component
                    Enter the directory sandcastle-ng/buildconfig
                        cd buildconfig
                    List the components requiring a "tag"
                        ls -l *tag
                    Check that each component has a tag
                        Automatically display the contents of all .tag files
                            XOR
                                use the standard find utility to display the content of each file
                                    find . -type f -name "*.tag" -exec sh -c 'echo "==== {} ===="; cat {}' \;
                                run the print-latest-versions script
                                    cd .. # buildconfig
                                    ./print-latest-versions
                                run the print-component-versions script
                                    ./print-component-versions
                            TO DO, understand the difference between print-component-versions and print-latest-versions
                        Check that each .tag file contains only a version number (tag) in the format vX.Y.Z
            Build the project
                Return to the project root
                    cd .. # sandcastle.ng
                Execute the build command to start the compilation
                    ./sandcastle-build # This command creates a container image named "taler-base-all"
                    Wait a long time for the compilation of all components of GNU TALER to finish and the container to be created
                Verify the creation of the "taler-base-all" container
                    podman images # localhost/taler-base-all  latest ...other informations...  3.32 GB
            Configure the project deployment
                Modify the configuration scripts
                    Edit scripts/demo/setup-sandcastle.sh to define the currency used by Taler in your deployment
                        Open the configuration file setup-sandcastle.sh
                            vim scripts/demo/setup-sandcastle.sh
                        Modify the name of the currency used
                            WARNING: in case of difficulty, press "Esc" then the character ":", then enter the following two characters "q!". This will close the current script without making any changes. You can then re-run the command "vim scripts/demo/setup-sandcastle.sh" to start again with the default file. If the code is in an imperfect state never press "Esc" then ":w" as this would save the imperfect state.
                            press the character "/" once then the word "CURRENCY" then the Enter key # to reach the option to modify to change the currency name
                            press the character "w" 4 times # to reach the word KUDOS which is the default currency
                            press the character "x" 5 times # to erase the word KUDOS
                            press the character "i" # to be able to write in the script
                            type the name of your currency, in uppercase to keep the same style as the original code
                            press the character "Esc" to exit write mode
                            press the character ":" then the three characters ":wq" to save and close the file
                    (Optional) Adjust the sandcastle-run script to configure the ports that will be "opened" on the host.
                        Open the configuration file sandcastle-build
                            vim sandcastle-run
                        Configure the "opened" ports on the host
                            WARNING: in case of difficulty, press "Esc" then the character ":", then enter the following two characters "q!". This will close the current script without making any changes. You can then re-run the command "vim scripts/demo/setup-sandcastle.sh" to start again with the default file. If the code is in an imperfect state never press "Esc" then ":w" as this would save the imperfect state.
                            press the character "/" once then type the string "PORT_INTERNAL" then the Enter key # to reach the first line containing a port to modify
                            7 steps to repeat 7 times each
                                press the character "$" once # to reach the end of the line
                                press the character "b" once # to reach the beginning of the port number to modify
                                press the character "x" 4 times # to erase the port to modify
                                press the character "i" # to be able to write in the script
                                type the new port number
                                press the character "Esc" to exit write mode
                                press the character "n" to reach the next line containing a port to modify
                                (GOTO: "7 steps to repeat 7 times each"
                            Press the character ":" then the three characters ":wq" to save and close the file
            Launch the deployment        
                Execute the "taler-base-all" container
                    ./sandcastle-run -d # the -d option allows the container to run in the background.
                Verify that everything went well
                    ls scripts/demo/setup-sandcastle.sh
                    journalctl -u setup-sandcastle.service
                    TO DO, determine the use of sandcastle-logs
            Technically test the deployment
                Verify the correct execution of the deployment
                    podman ps # localhost/taler-base-all:latest ...other information... 127.0.0.1:16000->8301/tcp, 127.0.0.1:16001->8201/tcp, 127.0.0.1:16002-16003->8502-8503/tcp, 127.0.0.1:16005->8501/tcp, 127.0.0.1:16007->8080/tcp, 127.0.0.1:16009->8505/tcp  taler-sandcastle
                Check port mappings
                    podman port taler-sandcastle # Displays the 7 ports "remapped" from the request entry port to the internal container port on 127.0.0.1
                (Optional) Enter the container
                    XOR
                        ./sandcastle-enter # gives access to a shell inside the container
                        podman exec -it taler-sandcastle /bin/bash # gives access to a shell inside the container
                    Once inside the container
                        Test open IPV4 and IPV6 ports
                            netstat -tuln
                            For each of the 7 ports normally open at this stage, test if there is an associated web interface
                                curl localhost:2019 # IPV4 - 404 not found
                                curl localhost:5432 # IPV4 - PostgreSQL, empty reply from webserver
                                curl localhost:8505 # IPV6 - Bank single page application
                                curl localhost:8301 # IPV6 - None
                                curl localhost:8021 # IPV6 - None
                                curl localhost:8080 # IPV6 - None
                        Inspect data
                            podman volume inspect talerdata
            Functionally test the deployment
                TODO
                Test provisioning
                    List provisioning scripts
            Stop the deployment
                podman stop taler-sandcastle
            Restart the deployment
                podman start taler-sandcastle

